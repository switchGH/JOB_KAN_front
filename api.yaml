swagger: '2.0'
info:
    description: 'JOB KANに関するAPI'
    version: '1.0.0'
    title: 'Swagger JOBKAN'
    termsOfService: 'http://swagger.io/terms/'
    # contact:
    #   email: "apiteam@swagger.io"
    # license:
    #   name: "Apache 2.0"
    #   url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: 'jobkan.swagger.io'
basePath: '/v1'
tags:
    - name: 'jobkan'
      description: 'あなたの作業時間を記録できます'
      # externalDocs:
      #   description: ""
      #   url: "http://swagger.io"
    - name: 'users'
      description: 'ユーザー操作'
      # externalDocs:
      #   description: "Find out more about our store"
      #   url: "http://swagger.io"
    - name: 'work-time'
      description: '作業時間操作'
schemes:
    - 'https'
    - 'http'
paths:
    /users:
        get:
            tags:
                - 'users'
            summary: 'ユーザー情報取得'
            description: '全てのユーザー情報を返します'
            # operationId: "getPetById"
            produces:
                # - "application/xml"
                - 'application/json'
            parameters: []
            responses:
                200:
                    description: 'Success'
                    schema:
                        type: 'object'
                        properties:
                            _id:
                                type: 'string'
                            studentId:
                                type: 'integer'
                                format: 'int64'
                            name:
                                type: 'string'
                            password:
                                type: 'string'
                                description: '暗号化済み'
                401:
                    description: 'Authentication error'
                500:
                    description: 'Internal Server Error'
            # security:
            # - api_key: []
    /users/signup:
        post:
            tags:
                - 'users'
            summary: 'ユーザー登録'
            description: '新規ユーザーを登録します'
            consumes:
                - 'multipart/form-data'
            produces:
                - 'application/json'
            parameters:
                - in: 'body'
                  name: 'body'
                  description: 'ユーザーオブジェクト'
                  required: true
                  schema:
                      $ref: '#/definitions/Users'
            responses:
                201:
                    description: 'Created'
                500:
                    description: 'Internal Server Error'
            # security:
            # - petstore_auth:
            #   - "write:pets"
            #   - "read:pets"
    /users/login:
        post:
            tags:
                - 'users'
            summary: 'ログイン'
            description: 'ユーザー認証を行う'
            produces:
                - 'application/json'
            parameters:
                - in: 'header'
                  name: 'header'
                  description: 'JWT'
                  schema:
                      type: 'string'
                  required: true
                - in: 'body'
                  name: 'body'
                  description: 'ユーザーオブジェクト'
                  required: true
                  schema:
                      $ref: '#/definitions/Users'
            responses:
                200:
                    description: 'Success'
                401:
                    description: 'Unauthorized'
                404:
                    description: 'Not Found'
                500:
                    description: 'Internal Server Error'
    /users/{studentId}:
        delete:
            tags:
                - 'users'
            summary: 'ユーザー削除'
            description: '指定のユーザーを削除します'
            parameters:
                - name: 'jwt'
                  in: 'header'
                  description: 'JWT'
                  required: true
                  type: 'string'
                - name: 'studentId'
                  in: 'path'
                  description: '学籍番号'
                  required: true
                  type: 'integer'
                  format: 'int64'
            responses:
                202:
                    description: 'Delete id ${studentId}'
                401:
                    description: 'Authentication error. Token required.'
                404:
                    description: 'error'

    /work-time:
        get:
            tags:
                - 'work-time'
            summary: '作業取得'
            description: '全ユーザーの作業記録を返す'
            produces:
                - 'application/json'
            responses:
                200:
                    description: 'Success'
                    schema:
                        $ref: '#/definitions/WorkTime'
        post:
            tags:
                - 'work-time'
            summary: '作業登録'
            description: '作業記録を登録する'
            produces:
                - 'application/json'
            parameters:
                - name: 'body'
                  in: 'body'
                  description: '作業内容'
                  required: true
                  schema:
                      $ref: '#/definitions/WorkTime'
            responses:
                201:
                    description: 'Created'

    /work-time/{studentId}:
        get:
            tags:
                - 'work-time'
            summary: '学生の作業記録を取得'
            description: '学生の作業記録を返す'
            produces:
                - 'application/json'
            parameters:
                - name: 'studentId'
                  in: 'path'
                  description: '学籍番号'
                  required: true
                  type: 'integer'
                  format: 'int64'
            responses:
                200:
                    description: 'successful operation'
                    schema:
                        type: 'object'
                        properties:
                            _id:
                                type: 'string'
                            studentId:
                                type: 'integer'
                                format: 'int64'
                            date:
                                type: 'object'
                                properties:
                                    full_date:
                                        type: 'string'
                                    year:
                                        type: 'string'
                                    month:
                                        type: 'string'
                                    day:
                                        type: 'string'
                            time:
                                type: 'object'
                                properties:
                                    display:
                                        type: 'string'
                                    convert_sec:
                                        type: 'integer'
                                        format: 'int64'
                            content:
                                type: 'string'

                400:
                    description: 'Invalid ID supplied'
                404:
                    description: 'Not found'
            # security:
            # - api_key: []
    /work-time/{student_id}/{_id}:
        delete:
            tags:
                - 'work-time'
            summary: '作業記録を削除'
            description: 'IDを基に作業記録を削除します'
            produces:
                - 'application/json'
            parameters:
                - name: 'student_id'
                  in: 'path'
                  description: '学籍番号'
                  required: true
                  type: 'integer'
                - name: '_id'
                  in: 'path'
                  description: 'オブジェクトID'
                  required: true
                  type: 'string'
            responses:
                202:
                    description: 'Delete id ${_id}'
                404:
                    description: ''
        put:
            tags:
                - 'work-time'
            summary: '作業記録を更新'
            description: 'objectIDで作業記録を更新します'
            produces:
                - 'application/json'
            parameters:
                - name: 'student_id'
                  in: 'path'
                  description: '学籍番号'
                  required: true
                  type: 'integer'
                - name: '_id'
                  in: 'path'
                  description: 'objectID'
                  required: true
                  type: 'string'
            responses:
                200:
                    description: 'Success'
                404:
                    description: 'ID Not Found'
                500:
                    description: ''

#     put:
#       tags:
#       - "user"
#       summary: "Updated user"
#       description: "This can only be done by the logged in user."
#       operationId: "updateUser"
#       produces:
#       - "application/xml"
#       - "application/json"
#       parameters:
#       - name: "username"
#         in: "path"
#         description: "name that need to be updated"
#         required: true
#         type: "string"
#       - in: "body"
#         name: "body"
#         description: "Updated user object"
#         required: true
#         schema:
#           $ref: "#/definitions/User"
#       responses:
#         400:
#           description: "Invalid user supplied"
#         404:
#           description: "User not found"
#     delete:
#       tags:
#       - "user"
#       summary: "Delete user"
#       description: "This can only be done by the logged in user."
#       operationId: "deleteUser"
#       produces:
#       - "application/xml"
#       - "application/json"
#       parameters:
#       - name: "username"
#         in: "path"
#         description: "The name that needs to be deleted"
#         required: true
#         type: "string"
#       responses:
#         400:
#           description: "Invalid username supplied"
#         404:
#           description: "User not found"
# securityDefinitions:
#   petstore_auth:
#     type: "oauth2"
#     authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
#     flow: "implicit"
#     scopes:
#       write:pets: "modify pets in your account"
#       read:pets: "read your pets"
#   api_key:
#     type: "apiKey"
#     name: "api_key"
#     in: "header"
definitions:
    WorkTime:
        type: 'object'
        properties:
            studentId:
                type: 'integer'
                format: 'int64'
            date:
                type: 'object'
                properties:
                    full_date:
                        type: 'string'
                    year:
                        type: 'string'
                    month:
                        type: 'string'
                    day:
                        type: 'string'
            time:
                type: 'object'
                properties:
                    display:
                        type: 'string'
                    convert_sec:
                        type: 'integer'
                        format: 'int64'
            content:
                type: 'string'
    Users:
        type: 'object'
        properties:
            # _id:
            #   type: "string"
            studentId:
                type: 'integer'
                format: 'int64'
            name:
                type: 'string'
            password:
                type: 'string'
                description: '暗号化済み'
